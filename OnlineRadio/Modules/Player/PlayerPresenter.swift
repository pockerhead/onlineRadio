//
//  PlayerPresenter.swift
//  OnlineRadio
//
//  Created Артём Балашов on 19/01/2019.
//  Copyright © 2019 Артём Балашов. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/Swift-viper-template-for-xcode
//

import UIKit
import AVFoundation

class PlayerPresenter {
    // MARK: - Properties
    weak private var view: PlayerView?
    var interactor: PlayerInteractorInput?
    private let router: PlayerWireframeInterface
    private var stationID: Int!
    private var isPlayed: Bool = false
    private var player = AVPlayer()
    
    // MARK: - Initialization and deinitialization -
    init(interface: PlayerView, interactor: PlayerInteractorInput?, router: PlayerWireframeInterface, stationID: Int) {
        self.stationID = stationID
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

}

// MARK: - PlayerPresenterInterface -
extension PlayerPresenter: PlayerPresenterInterface {
    func didSelectPlayPauseButton() {
        togglePlayed()
        view?.displayButtonImage(UIImage(named: isPlayed ? "pauseIcon" : "playIcon") ?? UIImage())
    }
    
    func viewDidLoad() {
        interactor?.fetchStreamURL(with: stationID)
    }
}

//MARK: - Private
extension PlayerPresenter {
    private func togglePlayed() {
        isPlayed.toggle()
        if isPlayed {
            player.play()
        } else {
            player.pause()
        }
        
    }
}

// MARK: - PlayerInteractorOutput -
extension PlayerPresenter: PlayerInteractorOutput {
    func fetched(with streamURL: String) {
        guard let url = URL( string: streamURL) else {
//            fetched(with: )
            return
        }
        let item = AVPlayerItem(url: url)
        player = AVPlayer(playerItem: item)
        didSelectPlayPauseButton()
    }
    
    func fetched(with error: Error) {
        view?.showAlert(title: nil, message: error.localizedDescription)
    }
    
    func fetchedFully() {
        
    }
    

    
    
}

