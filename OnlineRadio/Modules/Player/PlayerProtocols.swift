//
//  PlayerProtocols.swift
//  OnlineRadio
//
//  Created Артём Балашов on 19/01/2019.
//  Copyright © 2019 Артём Балашов. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/Swift-viper-template-for-xcode
//

import Foundation
import UIKit

//MARK: Wireframe -
enum PlayerNavigationOption {
    //    case firstModule
    //    case secondModule(someData)
}

protocol PlayerWireframeInterface: class {
    func navigate(to option: PlayerNavigationOption)
}

//MARK: Presenter -
protocol PlayerPresenterInterface: class {

    var interactor: PlayerInteractorInput? { get set }
    
    func didSelectPlayPauseButton()
    // MARK: - Lifecycle -
    func viewDidLoad()
    func viewWillAppear()
    func viewDidAppear()
    func viewWillDisappear()
    func viewDidDisappear()

}
extension PlayerPresenterInterface {
    func viewDidLoad() {/*leaves this empty*/}
    func viewWillAppear() {/*leaves this empty*/}
    func viewDidAppear() {/*leaves this empty*/}
    func viewWillDisappear() {/*leaves this empty*/}
    func viewDidDisappear() {/*leaves this empty*/}
}


//MARK: Interactor -
protocol PlayerInteractorOutput: class {
    func fetched(with streamURL: String)
    func fetched(with error: Error)
    func fetchedFully()
    /* Interactor -> Presenter */
}

protocol PlayerInteractorInput: class {

    var presenter: PlayerInteractorOutput?  { get set }
    func fetchStreamURL(with stationID: Int)


    /* Presenter -> Interactor */
}

//MARK: View -
protocol PlayerView: class, Alertable {

    var presenter: PlayerPresenterInterface?  { get set }
    func displayStationName(_ stationName: String)
    func displaySongName(_ songName: String)
    func displayImage(_ image: UIImage)
    func displayButtonImage(_ image: UIImage)
    /* Presenter -> ViewController */
}
